#!/usr/bin/python3
import os
import sys
from pprint import pprint
from normal_print import print, println
from colorama import Fore

from RSToken import tokenize
from RSParse import RParser
from RSEnv import createGlobalEnv, REnvironment
from RSValues import NumberVal, NullVal, BooleanVal
from RSRunner import evaluate, eval_program
from RSError import i_error, c_error

current_version = "0.0517A"
current_version_info = "(альфа-билд, полная версия 0.0517A)"

def REPL() -> None:
  repl_parser = RParser()

  env = createGlobalEnv()
  println(f"\nРепликатор языка Русик, версия {current_version} {current_version_info}\nВведите `помощь` или `help` для получения справки")
  while (True):
    repl_parser.clear()
    input_src = input(f"{Fore.GREEN}Код{Fore.RESET} >> {Fore.YELLOW}")
    print(Fore.RESET)
    if (input_src in ["exit", "quit", "выход", "выйти"]):
      exit()
    elif (input_src in ["help", "?", "помощь"]):
      println("Это помощь по репликатору языка Русик версии {current_version}:")
      println("  - Введите `помощь`, `?`, или `help`, для получения справки")
      println("  - Введите код для его выполнения")
    elif (input_src in ["::CLEAN::", "::CLEAR::", "::ОЧИСТ::"]):
      os.system("clear")
    else:
      program = repl_parser.produceAST(input_src)
      res = eval_program(program, env)
      println(f"{Fore.WHITE}{res}{Fore.RESET}")

def RunProgram(src: str) -> None:
  program_parser = RParser()
  env = createGlobalEnv()

  program = program_parser.produceAST(src)
  res = eval_program(program, env)
  println(f"{Fore.WHITE}{res}{Fore.RESET}")

def parse_flags(flags: list):
  dflags = {"run": "", "file": ""}
  pos = 0
  while (pos < len(flags)):
    if (flags[pos] == "-r"):
      dflags["run"] = "repl"
      pos += 1
    elif (flags[pos] == "-f"):
      dflags["run"] = "file"
      dflags["file"] = flags[pos+1]
      pos += 1
    else:
      i_error(f"Flags Error: Unknown flag {flags[pos]}")
      exit(1)

  return dflags

def main(argc: int, argv: list) -> int:
  flags: dict = parse_flags(argv[1:])
  println(flags)

  if (flags["run"] == "repl"):
    REPL()
  elif (flags["run"] == "file"):
    with open(flags["file"], "r") as fl:
      src_code = fl.read()
    RunProgram(src_code)
  else:
    i_error("No file or repl provided")

  return 0

if (__name__ == "__main__"):
  exit(main(len(sys.argv), sys.argv))

